<?php

require get_template_directory() . '/inc/helpers.php';

if ( ! function_exists( 'iis_start_setup' ) ) {
	/**
	 * IIS Start theme setup
	 * Hooked into the after_setup_theme hook
	 */
	function iis_start_setup() {
		load_theme_textdomain( 'iis-start', get_template_directory() . '/resources/languages' );

		add_theme_support( 'automatic-feed-links' );
		add_theme_support( 'title-tag' );
		add_theme_support( 'post-thumbnails' );
	}
}

add_action( 'after_setup_theme', 'iis_start_setup' );

/**
 * Register and enqueue scripts and styles based on the mix-manifest
 * generated by webpack
 */
function iis_start_assets() {
	// Fonts
	wp_enqueue_style( 'iis-start-fonts', 'https://fonts.googleapis.com/css?family=Open+Sans:400,400i,800,800i', [], '1' );

	// Manifest assets
	$mix_manifest_content = iis_start_remember(
		'mix_manifest_transient',
		1 * DAY_IN_SECONDS,
		function () {
			return file_get_contents( get_template_directory() . '/mix-manifest.json' );
		}
	);

	try {
		$mix_manifest = json_decode( $mix_manifest_content, true );
	} catch ( Exception $e ) {
		$mix_manifest = null;
	}

	if ( $mix_manifest ) {
		if ( is_array( $mix_manifest ) ) {
			foreach ( $mix_manifest as $base => $versioned ) {
				$segments     = explode( '/', $base );
				$last_segment = array_pop( $segments );

				list( $name, $type ) = explode( '.', $last_segment );

				$version_parts = explode( '?id=', $versioned );
				$version       = array_pop( $version_parts );

				if ( 'css' == $type ) {
					wp_enqueue_style( 'iis-start-style-' . $name, get_stylesheet_directory_uri() . $base, [ 'iis-start-fonts' ], $version );
				} else {
					wp_enqueue_script( 'iis-start-script-' . $name, get_stylesheet_directory_uri() . $base, [], $version, true );
				}
			}
		}
	}
}

add_action( 'wp_enqueue_scripts', 'iis_start_assets' );

/**
 * For security reasons, remove the WordPress generator meta tag
 */
function remove_generator_filter() {
	return '';
}

$types = [ 'html', 'xhtml', 'atom', 'rss2', 'comment', 'export' ];

foreach ( $types as $generator_type ) {
	add_filter( 'get_the_generator_' . $generator_type, 'remove_generator_filter' );
}
